@using CoreLayer.ViewModels.Chats
@model List<UserGroupViewModel>
@{
    ViewData["Title"] = "Home Page";
}

<!-- Modal for connection timout -->
<div id="Alert">
    <p>Connection eroorr please wait . . .</p>
    <div>
        <button onclick="CloseAlert()">Close</button>
    </div>
</div>


<!-- Modal for insert group -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form class="modal-content" enctype="multipart/form-data" onsubmit="insertGroup(event)">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">ایجاد گروه</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control" id="groupName" placeholder="نام گروه" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">بستن</button>
                <button type="submit" class="btn btn-primary">ایجاد گروه</button>
            </div>
        </form>
    </div>
</div>


<div class="row">
    <div class="col-8 chat-content">
        <div class="header" style="display:none;">
            <img src="img/Default.jpg" />
            <h2>علی</h2>
        </div>
        <div class="chats">
         
        </div>
        <div class="footer" style="display:none;">
            <form onsubmit="SendMessage(event)">
                <input type="text" id="messagetext" class="form-control" placeholder="متن خود را وارد کنید">
                <button class="btn btn-success">
                    ارسال
                    <i class="fa fa-send"></i>
                </button>
            </form>
        </div>
    </div>
    <div class="col-4 rooms" style="cursor:alias; padding:0%;">
        <ul>
            <li>
                <form>
                    <input type="text" onkeyup="search()" placeholder="جستوجو کنید" id="search_input" class="form-control" />
                    <i class="fa fas fa-search"></i>
                </form>
            </li>
            <li id="search_result" role="alert">
                <ul>
                    <li class="alert alert-warning">
                        NotFound
                    </li>
                </ul>
            </li>

            <li id="user_group">
                <ul>
                    <li>
                        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#exampleModal">
                            ایجاد گروه
                        </button>
                    </li>

                    @foreach (var item in Model)
                    {
                        <li onclick="JoinInGroup(`@item.token`)">
                            @item.GroupName
                            <img src="img/Default.jpg" />
                            <span>@item.LastChat</span>
                        </li>
                    }
                </ul>
            </li>
        </ul>
    </div>
</div>


@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/SignalRCustom.js"></script>
    <script>
        $(document).ready(function () {
            if (Notification.permission !== "granted") {
                Notification.requestPermission();
            }
        });
        var currentGroupId = 0;
        var userId = 0;
        var countNotif=0;

        var connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();

        connection.onclose(() => {
            console.log("اتصال قطع شد.");
        });

        connection.on("NewGroup", appendGroup);

        connection.on("JoinGroup", joines);

        connection.on("Test", function (id) {
            userId = id;
            console.log(userId);
        });

        connection.on("ReceivedMessage", receive);
        connection.on("ReceivedNotification",sendnotification);
        
        connection.start();

        function sendnotification(chat){
                if (Notification.permission === "granted") {
                if (currentGroupId !== chat.groupId) {
                    var notification = new Notification(chat.groupName,
                        {
                            body: chat.chatBody
                        });
                        countNotif+=1;
                        console.log(countNotif);
                }
            }
        }

        function CloseAlert() {
            $("#Alert").fadeOut();
        }

        async function Start() {
            try {
               
                await connection.start();
                
            }
            catch (ex) {
                setTimeout(Start, 6000);
                $("#Alert").fadeIn();
            }
        }
        
        connection.onclose(Start);
       

    </script>
}